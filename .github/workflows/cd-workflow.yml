name: Deploy Docker Image to ECR


# CI workflow 완료 시 트리거
on:
  workflow_run:
    workflows: [ "Build and Test" ]
    types:
      - completed


env:
  MYSQL_URL: ${{ secrets.PROD_MYSQL_URL }}
  MYSQL_USERNAME: ${{ secrets.PROD_MYSQL_USERNAME }}
  MYSQL_PASSWORD: ${{ secrets.PROD_MYSQL_PASSWORD }}
  KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
  KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
  SECURITY_SECRET_KEY: ${{ secrets.SECURITY_SECRET_KEY }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}


jobs:
  deploy:

    # 조건 : CI가 통과해야하고 트리거는 push여야 한다.
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'push'
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      packages: write

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle (prod profile)
        run: ./gradlew clean build -Dspring.profiles.active=prod -Dfile.encoding=UTF-8 -Duser.language=ko -Duser.country=KR

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml

      - name: Login to DockerHub
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2.4.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/urlib_server:latest
