spring:
  config:
    activate:
      on-profile: prod
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${PROD_MYSQL_URL}
    username: ${PROD_MYSQL_USERNAME}
    password: ${PROD_MYSQL_PASSWORD}
    hikari:
      minimum-idle: 1
      maximum-pool-size: 5
      pool-name: MYSQL_DB

  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: false
    show-sql: false
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  data:
    redis:
      host: ${PROD_REDIS_HOST}
      port: ${PROD_REDIS_PORT}
  security:
    jwt:
      access-token-expiry: 600 # 10 minutes
      refresh-token-expiry: 3600 # 1 hour
      secret-key: ${SECURITY_SECRET_KEY}    # 32 bytes
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}  # rest api 키
            client-secret: ${KAKAO_CLIENT_SECRET} # client secret 키
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - account_email
              - profile_image
              - profile_nickname
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: [ health, info ]

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: /urlib-api  # swagger-ui 접근 경로에 대한 별칭, 해당 주소로 접속해도 http://localhost:8080/swagger-ui/index.html로 리다이렉션 됨.
    groups-order: DESC # path, query, body, response 순으로 출력
    tags-sorter: alpha # 태그를 알파벳 순으로 정렬
    operations-sorter: alpha  # delete - get - patch - post - put 순으로 정렬, alpha를 사용하면 알파벳 순으로 정렬 가능
  paths-to-match:
    - /api/** # swagger-ui에 표시할 api의 엔드포인트 패턴
openai:
  model: gpt-4.1-nano
  api:
    url: https://api.openai.com/v1/chat/completions
    key: ${CHATGPT_SECRET_KEY}
